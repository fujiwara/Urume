: cascade base
: around content -> {
<h1><: $c.stash.site_name :></h1>

<h2>Virtual Machines</h2>
<table class="table table-striped">
  <thead>
    <tr>
      <th>id</th>
      <th>name</th>
      <th>IP address</th>
      <th>mac</th>
      <th>active</th>
      <th>host</th>
      <th>base</th>
      <th>pubkey</th>
    </tr>
  </thead>
  <tbody>
: for $vms -> $vm {
    <tr>
      <td><: $vm.id :></td>
      <td><: $vm.name :></td>
      <td><: $vm.ip_addr :></td>
      <td><: $vm.mac_addr :></td>
      <td><i class="icon-<: $vm.status ? 'ok' : 'minus' :>"></i></td>
      <td><: $vm.host :></td>
      <td><: $vm.base :></td>
      <td><a href="public_key/<: $vm.name | uri :>"><i class="icon-file"></id></a></td>
    </tr>
: }
  </tbody>
</table>

<h2>Avaliable hosts</h2>
<ul>
: for $stash.config.hosts -> $h {
  <li><: $h :></li>
: }
</ul>

<h2>Avaliable base images</h2>
<ul>
: for $stash.config.base_images -> $b {
  <li><: $b :></li>
: }
</ul>

<h2 id="api" name="api">API</h2>

<h3>Register new VM</h3>
<pre>
POST <: $c.req.uri_for('/vm/register') :>
parameters: [*] required
  name: VM name [*]
  host: VM host (hostagent is running) [*]
  base: Base vm name (virt-clone -o $base -n $name) [*]
  public_key: public key for VM
  start: 0 or 1
</pre>

<h3>Get VM info</h3>
<pre>
GET <: $c.req.uri_for('/vm/info/') :>{name}

{
  "id":"5",
  "name":"sl6",
  "base":"sl6base",
  "host":"localhost",
  "ip_addr":"192.168.1.228",
  "mac_addr":"52:54:00:00:00:05",
  "status":null
}
</pre>

<h3>Start VM</h3>
<pre>
POST <: $c.req.uri_for('/vm/start/') :>{name}
</pre>

<h3>Stop VM</h3>

send shutdown signal to VM.
<pre>
POST <: $c.req.uri_for('/vm/stop/') :>{name}
</pre>


<h3>Force stop VM</h3>

force stop VM.
<pre>
POST <: $c.req.uri_for('/vm/force_stop/') :>{name}
</pre>

<h3>Remove VM</h3>
<pre>
POST <: $c.req.uri_for('/vm/remove/') :>{name}
</pre>

<h3>Register public key for VM</h3>
<pre>
POST <: $c.req.uri_for('/public_key/') :>{name}
parameters:
  key: public key
</pre>

<h3>Retrieve public key</h3>
<pre>
GET <: $c.req.uri_for('/public_key') :>
</pre>

Retieve public key by request IP address.

<h3>Retrieve public key for VM</h3>
<pre>
GET <: $c.req.uri_for('/public_key/') :>{name}
</pre>

<h3>Get dnsmasq.conf</h3>

<pre>
GET <: $c.req.uri_for('/dnsmasq.conf') :>
</pre>

get the configuration file such as following.
<pre>
<: include "dnsmasq.conf.tx" :>
</pre>

In your dnsmasq.conf
<pre>
conf-file=/etc/dnsmasq.d/vm.conf
</pre>

: }

